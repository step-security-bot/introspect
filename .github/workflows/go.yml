name: Build
on:
  push:
    branches:
    - master
    - release/*

jobs:
  build:
    name: Build with Docker buildx
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: docker.io      
      DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/introspect
      DOCKER_TARGET_PLATFORM: linux/amd64,linux/arm64,linux/arm/v7

    steps:

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go

    - name: Set up Docker Buildx      
      uses: crazy-max/ghaction-docker-buildx@v3
      with:
        buildx-version: latest
        qemu-version: latest
      id: buildx
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Check out cache
      uses: actions/cache@v1
      with:
        path: |
          ~/go/pkg/mod
          ~/vendor
          /tmp/.buildx-cache
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: go mod vendor
      run: go mod vendor

    - name: Login to DockerHub
      if: success()
      uses: crazy-max/ghaction-docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Docker Buildx (build) v1.0
      run: |
        docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --output "type=image,push=true" \
          --platform ${DOCKER_TARGET_PLATFORM} \
          --tag ${DOCKER_IMAGE}:v1.0 \
          --build-arg VERSION=v1.0 \
          --build-arg COMMIT=${{github.sha}} \
          --build-arg BRANCH=${{github.ref}} \
          --file ./Dockerfile .

    - name: Inspect image
      run: |
        docker buildx imagetools inspect ${DOCKER_IMAGE}:v1.0